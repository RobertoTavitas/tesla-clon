{"version":3,"sources":["components/Header.js","components/Section.js","components/Home.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","index.js"],"names":["Header","useState","burgerState","setBurgerState","Container","src","alt","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWraper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","id","title","description","backgroundImg","leftBtnText","rightBtnText","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d12604d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nfunction Header() {\n\n    const [burgerState, setBurgerState] = useState(false);\n\n\n    return (\n        <Container>\n            <a>\n                <img src=\"/images/logo.svg\" alt=\"\" />\n            </a>\n            <Menu>\n                <a href=\"#model-s\">Model S</a>\n                <a href=\"#model-3\">Model 3</a>\n                <a href=\"#model-x\">Model X</a>\n                <a href=\"#model-y\">Model Y</a>\n                <a href=\"#solar-roof\">Solar Roof</a>\n                <a href=\"#solar-panels\">Solar Panels</a>\n                <a href=\"#accesories\">Accesories</a>\n              \n            </Menu>\n            <RightMenu>\n                <a href=\"#\">Shop</a>\n                <a href=\"#\"> Account</a>\n                <CustomMenu onClick={ () => setBurgerState(true) } />\n            </RightMenu>\n            <BurgerNav show={ burgerState } >\n                <CloseWraper>\n                    <CustomClose onClick={ () => setBurgerState(false) } />\n                </CloseWraper>\n                <li><a href=\"#\">Existing Inventory</a></li>\n                <li><a href=\"#\">Used Inventory</a></li>\n                <li><a href=\"#\">Trade-in</a></li>\n                <li><a href=\"#\">Test-Drive</a></li>\n                <li><a href=\"#\">cybertruck</a></li>\n                <li><a href=\"#\">Roadster</a></li>\n                <li><a href=\"#\">Semi</a></li>\n                <li><a href=\"#\">Charging</a></li>\n                <li><a href=\"#\">Powerwall</a></li>\n                <li><a href=\"#\">Commercial Energy</a></li>\n                <li><a href=\"#\">Utilities</a></li>\n                <li><a href=\"#\">Find Us</a></li>\n                <li><a href=\"#\">Support</a></li>\n                <li><a href=\"#\">Investor Relations</a></li>\n            </BurgerNav>\n        </Container>\n    )\n }\n\nexport default Header\n\nconst Container = styled.div`\n    min-height: 60px;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n`\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n    a {\n        font-weight: 550;\n        font-size: 15px;\n        padding: 0 14px;\n        flex-wrap: no-wrap;\n    }\n\n    @media(max-width: 768px) {\n        display: none;\n    }\n`\n\nconst RightMenu = styled.div`\n    display: flex;\n    a {\n        font-weight: 500;\n        // text-transform: uppercase;\n        margin-right: 10px;\n    }\n`\n\nconst CustomMenu = styled(MenuIcon)`\n    cursor: pointer;\n`\n\nconst BurgerNav = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background: white;\n    width: 300px;\n    z-index: 16;\n    list-style: none;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\n    transition: transform 0.2s;\n    li {\n        padding: 20px 0 0 20px;\n        // border-bottom: 1px solid rgba(0, 0, 0, .2);\n\n        a{\n            font-weight: 550;\n            font-size: 15px;\n        }\n    a:hover{\n        border-radius: 10px;\n        background-color: rgba(0, 0, 0, .10);\n        padding: 0 20% 0 10px;\n\n    }\n    }\n`\n\nconst CustomClose = styled(CloseIcon)`\n    cursor: pointer;\n`\n\nconst CloseWraper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade';\n\nfunction Section({ id, title, description, backgroundImg, leftBtnText, rightBtnText}) {\n    return (\n        <Wrap bgImage={ backgroundImg }>\n            <Fade bottom>\n                <ItemText id={ id }>\n                    <h1 id=\"titulo\">{ title }</h1>\n                    <p id=\"descripcion\">{ description }</p> \n                </ItemText>\n            </Fade>\n            <Buttons>\n                <Fade bottom>\n                    <ButtonGroup>\n                        <LeftButton>\n                            { leftBtnText }\n                        </LeftButton>\n\n                        { rightBtnText && \n                            <RightButton>\n                                { rightBtnText }\n                            </RightButton>\n                        }      \n                    </ButtonGroup>\n                    <DownArrow src=\"/images/down-arrow.svg\" />\n                </Fade>\n            </Buttons>\n\n        </Wrap>\n    )\n}\n\nexport default Section\n\n// esta constante la modifiqué, originalmente la puse en background image del styled Wrap pero me arrojaba una advertencia para no usar\n// template literals anidadas. No estoy del todo seguro si debería ser una constante o variable.\nconst bgImage = props => `url(\"/images/${props.bgImage}\")`;\n\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: url('/images/model-s.jpg');\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${bgImage}\n`\n\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n    z-index: -1;\n    // font-weight: ;\n`\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px) {\n        flex-direction: column;\n    }\n`\n\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 550;\n    cursor: pointer;\n    margin: 8px;\n`\n\nconst RightButton = styled(LeftButton)`\n    background: white;\n    opacity: 0.65;\n    color: black;\n`\n\nconst DownArrow = styled.img`\n    height: 40px;\n    overflow-x: hidden;\n    animation: animateDown infinite 1.5s;\n`\n\nconst Buttons = styled.div`\n\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Section from './Section'\n\nfunction Home() {\n    return (\n        <Container>\n            <Section \n                id=\"model-s\"\n                title=\"Model S\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-s.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n                id=\"model-y\"\n                title=\"Model Y\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-y.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n                id=\"model-3\"\n                title=\"Model 3\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-3.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n            <Section \n                id=\"model-x\"\n                title=\"Model x\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-x.jpg\"\n                leftBtnText=\"Custom Order\"\n                rightBtnText=\"Existing Inventory\"\n            />\n            <Section\n                id=\"solar-roof\"\n                title=\"Solar Roof\"\n                description=\"Produce Clean Energy From Yuor Roof\"\n                backgroundImg=\"solar-roof.jpg\"\n                leftBtnText=\"Order now\"\n                rightBtnText=\"Learn more\"\n            />\n            <Section\n                id=\"solar-panels\"\n                title=\"Lowest Cost Solar Panels in America\"\n                description=\"Money-back guarantee\"\n                backgroundImg=\"solar-panel.jpg\"\n                leftBtnText=\"Order now\"\n                rightBtnText=\"Learn more\"\n            />\n            <Section\n                id=\"accesories\"\n                title=\"Accessories\"\n                description=\"\"\n                backgroundImg=\"accessories.jpg\"\n                leftBtnText=\"Shop now\"\n            />\n\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100vh;\n    z-index: 10;\n`\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}